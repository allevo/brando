name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  GAME_EXECUTABLE_NAME: brando

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Info
      run: sudo lshw -C display
    - name: Install deps
      run: sudo apt-get install -y libasound2-dev libudev-dev libvulkan1 mesa-vulkan-drivers vulkan-utils
    - name: Info2
      run: vulkaninfo
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ./target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: cargo build --verbose --tests
    - name: Run tests
      run: cargo test --verbose -- --nocapture


  build-windows:
    needs: [build]
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build release
        run: |
          cargo build --release
      #- name: Prepare release
      #  run: |
      #    mkdir target/release/assets && cp -r assets target/release/assets
      #    mkdir target/release/credits && cp -r credits target/release/credits
      - name: Zip release
        uses: vimtor/action-zip@v1
        with:
          #files: target/release/assets/ target/release/credits/ target/release/${{ env.GAME_EXECUTABLE_NAME }}.exe
          files: target/release/${{ env.GAME_EXECUTABLE_NAME }}.exe
          dest: ${{ env.GAME_EXECUTABLE_NAME }}_windows.zip
      - name: Upload release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.GAME_EXECUTABLE_NAME }}_windows.zip
          asset_name: ${{ env.GAME_EXECUTABLE_NAME }}_latest_windows.zip
          tag: ${{ github.ref }}
          overwrite: true










